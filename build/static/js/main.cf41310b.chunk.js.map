{"version":3,"sources":["utilities.js","components/EggMoves.jsx","components/Pokemon.jsx","App.js","index.js"],"names":["firstLetterUpperCase","str","toLowerCase","split","map","word","charAt","toUpperCase","substring","join","filterAndSort","list","sort","a","b","order","pokemon","name","id","abilities","moves","sprites","types","eggMoves","filter","move","version_group_details","move_learn_method","EggMovesStyled","styled","div","props","expanded","EggMoves","useState","length","setExpanded","onClick","className","i","key","PokemonCard","Pokemon","src","alt","type","ability","PokemonList","App","resultsPerPage","setResultsPerPage","loading","setLoading","currentPage","setCurrentPage","pokemonList","setPokemonList","useEffect","axios","get","listResponse","results","data","url","pokemonResponse","push","fetchData","onChange","e","Number","target","value","selected","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cf41310b.chunk.js","sourcesContent":["export const firstLetterUpperCase = (str) =>\n  str\n    .toLowerCase()\n    .split(\" \")\n    .map((word) => word.charAt(0).toUpperCase() + word.substring(1))\n    .join(\" \");\n\nexport const filterAndSort = (list) => {\n  const newList = list.sort((a, b) => a.order - b.order);\n  return newList.map((pokemon) => {\n    const { name, id, abilities, moves, sprites, types } = pokemon;\n    const eggMoves = moves.filter((move) => move.version_group_details[0].move_learn_method.name === \"egg\");\n    return { name, id, abilities, eggMoves, sprites, types };\n  });\n};\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { firstLetterUpperCase } from \"../utilities\";\n\nconst EggMovesStyled = styled.div`\n  .eggMove .item {\n    ${(props) => (props.expanded ? \"display: block !important;\" : \"display: none !important;\")}\n  }\n`;\n\nexport default function EggMoves(props) {\n  const [expanded, setExpanded] = useState(props.moves.length > 5 ? false : true);\n  return (\n    <EggMovesStyled onClick={() => setExpanded(!expanded)} expanded={expanded}>\n      Egg Moves:\n      {props.moves.length === 0 ? (\n        <span className=\"eggMove\">None</span>\n      ) : expanded ? (\n        props.moves.map((move, i) => (\n          <span key={i} className=\"eggMove item\">\n            {firstLetterUpperCase(move.move.name)}\n          </span>\n        ))\n      ) : (\n        <span className=\"eggMove\">Expand ({props.moves.length})</span>\n      )}\n    </EggMovesStyled>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { firstLetterUpperCase } from \"../utilities\";\nimport EggMoves from \"./EggMoves\";\n\nconst PokemonCard = styled.div`\n  align-self: stretch;\n  color: white;\n  width: 22rem;\n  background-color: darkslategray;\n  border-radius: 1rem;\n  border: 1px solid black;\n  margin: 1rem;\n  div.img-card {\n    background-color: white;\n    padding: 0;\n    margin: 0;\n    border-radius: 1rem 1rem 0 0;\n  }\n  .type,\n  .abilities,\n  .eggMove {\n    margin: 0.5rem;\n    background-color: white;\n    color: black;\n    border-radius: 0.5rem;\n    padding: 0.3rem;\n    width: 90%;\n    margin: 0.5rem auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    flex-wrap: wrap;\n  }\n`;\n\nexport default function Pokemon(props) {\n  const { name, id, abilities, eggMoves, sprites, types } = props.pokemon;\n  return (\n    <PokemonCard>\n      <div className=\"img-card\">\n        <img src={sprites[\"front_default\"]} alt=\"Front Default\" />\n      </div>\n      <h3>\n        {firstLetterUpperCase(name)} - #({id})\n      </h3>\n      <p>\n        Types:\n        {types.map((type, i) => (\n          <span key={i} className=\"type\">\n            {firstLetterUpperCase(type.type.name)}\n          </span>\n        ))}\n      </p>\n      <p>\n        Abilities:\n        {abilities.map((ability, i) => (\n          <span key={i} className=\"abilities\">\n            {firstLetterUpperCase(ability.ability.name)}\n          </span>\n        ))}\n      </p>\n      <EggMoves moves={eggMoves} />\n    </PokemonCard>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport styled from \"styled-components\";\nimport \"./App.css\";\nimport Pokemon from \"./components/Pokemon\";\nimport { filterAndSort } from \"./utilities\";\n\nconst PokemonList = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  width: 80rem;\n  margin: auto;\n`;\n\nconst App = () => {\n  const [resultsPerPage, setResultsPerPage] = useState(9);\n  const [loading, setLoading] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pokemonList, setPokemonList] = useState([]);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchData = async () => {\n      const listResponse = await axios.get(\n        `https://pokeapi.co/api/v2/pokemon?limit=${resultsPerPage}&offset=${(currentPage - 1) * resultsPerPage}`\n      );\n      const list = [];\n      const { results } = listResponse.data;\n\n      for (const pokemon of results) {\n        const pokemonResponse = await axios.get(pokemon.url);\n        list.push(pokemonResponse.data);\n      }\n      setPokemonList(filterAndSort(list));\n      setLoading(false);\n    };\n    fetchData();\n  }, [resultsPerPage, currentPage]);\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"Header\">Pokemon{loading ? \" Loading...\" : null}</h1>\n      <div className=\"info\">\n        Showing Pokemon #{(currentPage - 1) * resultsPerPage} - #{(currentPage - 1) * resultsPerPage + resultsPerPage}\n      </div>\n      <div className=\"info\">\n        Pokemon Per Page:{\" \"}\n        <select onChange={(e) => setResultsPerPage(Number(e.target.value))}>\n          <option value=\"3\">3</option>\n          <option value=\"6\">6</option>\n          <option value=\"9\" selected>\n            9\n          </option>\n          <option value=\"12\">12</option>\n          <option value=\"15\">15</option>\n        </select>\n      </div>\n      {loading ? (\n        \"Loading\"\n      ) : (\n        <PokemonList>\n          {pokemonList.map((pokemon) => (\n            <Pokemon key={pokemon.id} pokemon={pokemon} />\n          ))}\n        </PokemonList>\n      )}\n      <button disabled={loading} onClick={() => setCurrentPage(currentPage > 1 ? currentPage - 1 : 0)}>\n        Previous\n      </button>\n      <button disabled={loading} onClick={() => setCurrentPage(currentPage + 1)}>\n        Next\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}